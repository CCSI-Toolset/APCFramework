% CCSI APC Framework
% Pseudo-code for simulating the 'Plant' / 'High-fidelity Model'
%
% The following variables are required to be present in the WORKSPACE
% before invoking this script -
%
% 1. u_plant  - Vector containing values of input ports which need to be 
%               communicated to the plant for next-step plant-calculations
%               :: u[k]
% 2. t_plant  - Plant's current time-stamp (scalar), typically same as 
%               simulation time :: t[k]
% 3. Ts_plant - Sampling time-interval for the plant. May not be used for
%               discrete-time plants :: Ts
%
% The following variables are generated by this script -
%
% 4. y_plant  - Vector containing values of output ports at next-step :: 
%               y_plant[k+1]
%
% Notes - 
% 1. It is assumed that the plant preserves its state information and
%    hence the states (x_plant / y_plant) may NOT be provided.
% 2. The inputs/outputs to/from the control-model/DRM variables are mapped 
%    through model indices - um_idx and ym_idx
% 3. Furthermore, I/O to/from the controller variables are mapped through
%    controller indices - uc_idx, lc_idx and yc_idx
% 4. u_plant and y_plant are column vectors

% Code written and developed by:
% Priyadarshi Mahapatra, PhD
% URS Corporation / National Energy Technology Laboratory
% 13 Sept 2013
%
% -------------------------------------------------------------------------
% Specific instructions for pH_Reactor example -
%
% Make sure pH_Neut_Plant is defined and initialized. If not, use the
% following procedure OR just run the 'Initialize_pH_Reactor.m' script -
% 1. Create a pH_Reactor object:
%        pH_Neut_Plant = pH_Reactor;
% 2. Specify the nominal input(s):
%        u_plant = [2.46; 30.9; 3.0; 30.9]; % -- [Q1;Q3;Q5;Q7]
% 3. Initialize the reactor object:
%        pH_Neut_Plant.Initialize(u_plant); 
% 4. Obtain the nominal outputs(s)
%        y_plant = pH_Neut_Plant.y;
% 5. Specify the I/O names and units (optional):
%        u_name = pH_Neut_Plant.u_name;
%        y_name = pH_Neut_Plant.y_name;
%        u_unit = pH_Neut_Plant.u_unit;
%        y_unit = pH_Neut_Plant.y_unit;
%        t_unit = pH_Neut_Plant.t_unit;

pH_Neut_Plant.evalNextStep(u_plant,Ts_plant);

y_plant = pH_Neut_Plant.y;
